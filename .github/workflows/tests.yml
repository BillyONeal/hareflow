name: Tests

on:
  push:
    branches: main
  pull_request:
    types: [opened, synchronize]

jobs:
  unit:
    strategy:
      matrix:
        config:
          - {
              name: "Windows x64 (msvc)",
              os: windows-latest,
              compiler: "cl.exe",
              extension: ".exe",
              prefix: "Debug/"
           }
          - {
              name: "Linux x64 (gcc)",
              os: ubuntu-20.04,
              compiler: "/usr/bin/g++",
              extension: "",
              prefix: ""
           }
          - {
              name: "Linux x64 (clang)",
              os: ubuntu-20.04,
              compiler: "/usr/bin/clang++",
              extension: "",
              prefix: ""
           }
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: ilammy/msvc-dev-cmd@d39d8f7626e5667b00caa504eaefd7c24c9ba49d
      - name: Create cache folder
        run: mkdir .cache
        continue-on-error: true
      - name: Enable vcpkg cache
        uses: actions/cache@v2
        with:
          path: .cache
          key: ${{ runner.os }}-hareflow
      - name: Install apt dependencies
        if: matrix.config.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update && sudo apt-get install -y clang build-essential libssl-dev curl
      - name: Build Tests
        env:
          CXX: ${{ matrix.config.compiler }}
          CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.cache
        shell: bash
        run: |
          cmake -B build -S . -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build build/
      - name: Run Tests
        shell: bash
        run: |
          ctest --test-dir build